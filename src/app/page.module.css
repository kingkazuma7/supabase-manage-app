.page {
  --gray-rgb: 0, 0, 0;
  --gray-alpha-200: rgba(var(--gray-rgb), 0.08);
  --gray-alpha-100: rgba(var(--gray-rgb), 0.05);

  --button-primary-hover: #383838;
  --button-secondary-hover: #f2f2f2;

  display: grid;
  grid-template-rows: 20px 1fr 20px;
  align-items: center;
  justify-items: center;
  min-height: 100svh;
  padding: 80px;
  gap: 64px;
  font-family: var(--font-geist-sans);
}

@media (prefers-color-scheme: dark) {
  .page {
    --gray-rgb: 255, 255, 255;
    --gray-alpha-200: rgba(var(--gray-rgb), 0.145);
    --gray-alpha-100: rgba(var(--gray-rgb), 0.06);

    --button-primary-hover: #ccc;
    --button-secondary-hover: #1a1a1a;
  }
}

.main {
  display: flex;
  flex-direction: column;
  gap: 32px;
  grid-row-start: 2;
}

.main ol {
  font-family: var(--font-geist-mono);
  padding-left: 0;
  margin: 0;
  font-size: 14px;
  line-height: 24px;
  letter-spacing: -0.01em;
  list-style-position: inside;
}

.main li:not(:last-of-type) {
  margin-bottom: 8px;
}

.main code {
  font-family: inherit;
  background: var(--gray-alpha-100);
  padding: 2px 4px;
  border-radius: 4px;
  font-weight: 600;
}

.ctas {
  display: flex;
  gap: 16px;
}

.ctas a {
  appearance: none;
  border-radius: 128px;
  height: 48px;
  padding: 0 20px;
  border: none;
  border: 1px solid transparent;
  transition:
    background 0.2s,
    color 0.2s,
    border-color 0.2s;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16px;
  line-height: 20px;
  font-weight: 500;
}

a.primary {
  background: var(--foreground);
  color: var(--background);
  gap: 8px;
}

a.secondary {
  border-color: var(--gray-alpha-200);
  min-width: 158px;
}

.footer {
  grid-row-start: 3;
  display: flex;
  gap: 24px;
}

.footer a {
  display: flex;
  align-items: center;
  gap: 8px;
}

.footer img {
  flex-shrink: 0;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  a.primary:hover {
    background: var(--button-primary-hover);
    border-color: transparent;
  }

  a.secondary:hover {
    background: var(--button-secondary-hover);
    border-color: transparent;
  }

  .footer a:hover {
    text-decoration: underline;
    text-underline-offset: 4px;
  }
}

@media (max-width: 600px) {
  .page {
    padding: 32px;
    padding-bottom: 80px;
  }

  .main {
    align-items: center;
  }

  .main ol {
    text-align: center;
  }

  .ctas {
    flex-direction: column;
  }

  .ctas a {
    font-size: 14px;
    height: 40px;
    padding: 0 16px;
  }

  a.secondary {
    min-width: auto;
  }

  .footer {
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
  }
}

@media (prefers-color-scheme: dark) {
  .logo {
    filter: invert();
  }
}

.container {
  padding: 1rem;
  max-width: 768px;
  margin: 0 auto;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  padding: 1rem 0;
  border-bottom: 1px solid var(--gray-alpha-200);
}

.title {
  font-size: 2rem;
  font-weight: bold;
}

.staffList {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  flex: 1;
}

.staffItem {
  display: flex;
  gap: 1rem;
  align-items: center;
  background: var(--gray-alpha-100);
  padding: 1rem;
  border-radius: 12px;
  transition: transform 0.2s ease;
}

.buttonContent {
  display: flex;
  align-items: center;
  gap: 1rem;
  width: 100%;
  justify-content: center;
}

.masterBadge {
  padding: 0.25rem 0.75rem;
  background-color: var(--primary-alpha-100);
  color: var(--primary);
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.masterButton {
  background: linear-gradient(45deg, var(--primary) 0%, var(--primary-dark) 100%);
  position: relative;
  overflow: hidden;
}

.masterButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, rgba(255, 255, 255, 0.1), transparent);
  opacity: 0;
  transition: opacity 0.2s ease;
  opacity: none;
}

.masterButton:hover::before {
  opacity: 1;
}

.button {
  padding: 1rem 1.5rem;
  border-radius: 12px;
  color: white;
  border: none;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 1.1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  min-height: 48px;
}

.buttonPrimary {
  composes: button;
  background-color: #3b82f6;
  flex: 1;
}

.buttonDanger {
  composes: button;
  background-color: #ef4444;
  min-width: 100px;
}

.buttonSuccess {
  composes: button;
  background-color: #22c55e;
}

.modal {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem;
  backdrop-filter: blur(4px);
}

.modalContent {
  background-color: var(--background);
  padding: 2rem;
  border-radius: 16px;
  width: 100%;
  max-width: 400px;
  box-shadow:
    0 4px 6px -1px rgb(0 0 0 / 0.1),
    0 2px 4px -2px rgb(0 0 0 / 0.1);
}

/* モーダルのタイトルスタイル */
.modalTitle {
  font-size: 1.4rem;
  font-weight: 600;
  margin-bottom: 1.5rem;
  text-align: center;
  color: var(--foreground);
}

/* フォームのスタイル */
.form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  width: 100%;
}

.input {
  width: 100%;
  padding: 1rem;
  border: 2px solid var(--gray-alpha-200);
  border: 1px solid #a0a0a0;
  border-radius: 12px;
  font-size: 1.1rem;
  transition: border-color 0.2s ease;
  min-height: 48px;
}

.input:focus {
  outline: none;
  border-color: #3b82f6;
}

/* エラーメッセージのスタイル */
.error {
  background-color: #f44336;
  color: white;
  padding: 0.75rem 1rem;
  border-radius: 4px;
  margin: 0.5rem 0;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.4;
}

.buttonGroup {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  margin-top: 1rem;
}

/* タッチデバイス用のスタイル */
@media (hover: none) and (pointer: coarse) {
  .button {
    min-height: 56px;
    padding: 1rem 2rem;
  }

  .staffItem {
    padding: 1.5rem;
  }

  .input {
    min-height: 56px;
    font-size: 1.2rem;
  }

  .modalContent {
    padding: 2rem;
  }

  .buttonGroup {
    gap: 1rem;
  }

  .buttonGroup button {
    min-width: 120px;
  }
}

/* タッチデバイスでのホバー効果を無効化 */
@media (hover: none) and (pointer: coarse) {
  .buttonPrimary:hover,
  .buttonDanger:hover,
  .buttonSuccess:hover {
    background-color: inherit;
  }
}

/* ダークモード対応 */
@media (prefers-color-scheme: dark) {
  .staffItem {
    background: var(--gray-alpha-100);
  }

  .input {
    background-color: var(--background);
    color: var(--foreground);
  }
}

/* パスワード入力フィールドとアイコンを囲むコンテナ */
.passwordInputContainer {
  position: relative; /* 子要素のabsolute配置の基準となる */
  width: 100%; /* 親要素 (form) の幅に合わせる */
  margin-bottom: 1rem; /* エラーメッセージやボタンとの間に余白 */
}

/* パスワード入力フィールド自体のスタイル */
.passwordInputField {
  /* inputタグに適用する新しいクラス */
  width: 100%;
  padding: 1.4rem 1rem;
  padding-right: 3rem; /* アイコン分のスペースを確保 */
  border: 1px solid #a0a0a0; /* 既に修正済みであればこの行は不要 */
  border-radius: 0.5rem;
  font-size: 1.2rem;
  color: var(--foreground);
  background: var(--background);
  box-sizing: border-box;
}

/* パスワード表示/非表示トグルのスタイル */
.togglePassword {
  position: absolute; /* 親要素 .passwordInputContainer を基準に配置 */
  right: 1rem; /* 右端からの距離 */
  top: 50%; /* 上から50%の位置 */
  transform: translateY(-50%); /* 垂直方向の中央揃え */
  cursor: pointer;
  font-size: 1.2rem;
  color: var(--gray-rgb); /* テキスト色に合わせる */
  user-select: none; /* テキスト選択不可にする */
  padding: 0.2rem; /* クリックしやすいようにパディング */
  display: flex; /* アイコンが文字の場合に中央揃えをより確実に */
  align-items: center;
  justify-content: center;
  background-color: transparent;
  border: none;
  cursor: pointer;
  outline: none;
  padding: 0;
  appearance: none;
}

.togglePassword:hover {
  opacity: 0.8; /* ホバー時の視覚フィードバック */
}

/* パスワードリセットリンクのコンテナ */
.forgotPassword {
  text-align: center;
  margin: 0.5rem 0;
  width: 100%;
}

/* パスワードリセットリンクのスタイル */
.resetPasswordLink {
  background: none;
  border: none;
  color: #0066cc;
  text-decoration: underline;
  cursor: pointer;
  font-size: 0.875rem;
  padding: 0.25rem 0.5rem;
  transition: all 0.2s ease;
  width: auto;
  display: inline-block;
}

.resetPasswordLink:hover {
  opacity: 0.7;
  text-decoration: none;
}

.resetPasswordLink:focus {
  outline: 2px solid #0066cc;
  outline-offset: 2px;
  border-radius: 4px;
}

/* 成功メッセージのスタイル */
.success {
  background-color: #4caf50;
  color: white;
  padding: 0.75rem 1rem;
  border-radius: 4px;
  margin: 0.5rem 0;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.4;
}
